/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.EmployeeController;
import models.Employee;
import tools.DBConnection;
import controllers.JobController;
import daos.JobDAO;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import models.Job;
import controllers.JobController;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tools.DBConnection;

/**
 *
 * @author Lusiana
 */
public class JobView extends javax.swing.JInternalFrame {

    DBConnection connection = new DBConnection();

    EmployeeController ec = new EmployeeController(connection.getConnection());

//    JobDAO rdao = new JobDAO(connection.getConnection());
    JobController jc = new JobController(connection.getConnection());
    DefaultTableModel myTable = new DefaultTableModel();
//    List<Job> jobs = new ArrayList<Job>();

    /**
     * Creates new form Job
     */

    /**
     * Creates new form Job
     */
    
    
    public JobView() {
        initComponents();
        tableData(jc.getAll());
    }
    
    
    private boolean konfirmasi() {
        if (tfId.getText().equals("") || tfTitle.getText().equals("") || tfMinsal.getText().equals("") || tfMaxsal.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
            return false;
        }
        return true;
    }

    private boolean isEmpty() {
        if (jc.getById(tfId.getText()).isEmpty()) {
            return true;
        }
        return false;
    }

    private void tableData(List<Job> jobs) {
//        jobs = jc.getAll();
        Object[] columnNames = {"Nomor", "Job Id", "Job Title", "Minimal Salary", "Maximal Salary"};
        Object[][] data = new Object[jobs.size()][columnNames.length];
//        jTable1.setModel(myTable);
//        myTable.addColumn("Job Id");
//        myTable.addColumn("Job Title");
//        myTable.addColumn("Minimal Salary");
//        myTable.addColumn("Maximal Salary");
//        for (Job job : jc.searchBy("")) {
//            myTable.addRow(new Object[]{
//                job.getId(),
//                job.getName(),
//                job.getMin_salary(),
//                job.getMax_salary()
//            });
//        }

        for (int i = 0; i < data.length; i++) {
            data[i][0] = (i + 1);
            data[i][1] = jobs.get(i).getId();
            data[i][2] = jobs.get(i).getName();
            data[i][3] = jobs.get(i).getMin_salary();
            data[i][4] = jobs.get(i).getMax_salary();
        }
        myTable = new DefaultTableModel(data, columnNames);
        tbShow.setModel(myTable);
    }


    private void clean() {
        tfId.setEnabled(true);
        tfId.setText("");
        tfTitle.setText("");
        tfMinsal.setText("");
        tfMaxsal.setText("");
    }

    void filterhuruf(KeyEvent a) {
        if (Character.isAlphabetic(a.getKeyChar())) {
            a.consume();
            JOptionPane.showMessageDialog(null, "Pada Kolom Jumlah Hanya Bisa Memasukan Karakter Angka");
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_search = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        lblFormtitle = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbShow = new javax.swing.JTable();
        tfTitle = new javax.swing.JTextField();
        lblMinsal = new javax.swing.JLabel();
        cbSearch = new javax.swing.JComboBox<>();
        tfMinsal = new javax.swing.JTextField();
        lblMaxsal = new javax.swing.JLabel();
        tfMaxsal = new javax.swing.JTextField();
        btInsert = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        tfId = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        tf_search.setText("Search");

        lblId.setText("Job Id");

        lblFormtitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblFormtitle.setText("JOBS");

        lblTitle.setText("Job Title");

        tbShow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbShow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbShowMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbShow);

        tfTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTitleActionPerformed(evt);
            }
        });

        lblMinsal.setText("Minimum Salary");

        cbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search", "Search By Id", "Show All" }));
        cbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchActionPerformed(evt);
            }
        });

        tfMinsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMinsalActionPerformed(evt);
            }
        });
        tfMinsal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfMinsalKeyTyped(evt);
            }
        });

        lblMaxsal.setText("Maximum Salary");

        tfMaxsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfMaxsalActionPerformed(evt);
            }
        });
        tfMaxsal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfMaxsalKeyTyped(evt);
            }
        });

        btInsert.setText("Insert");
        btInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsertActionPerformed(evt);
            }
        });

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        tfId.setName(""); // NOI18N
        tfId.setOpaque(false);
        tfId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btInsert)
                                .addGap(18, 18, 18)
                                .addComponent(btDelete)
                                .addGap(144, 144, 144))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblMaxsal)
                                    .addComponent(lblTitle)
                                    .addComponent(lblMinsal)
                                    .addComponent(lblId))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfId)
                                    .addComponent(tfTitle)
                                    .addComponent(tfMinsal)
                                    .addComponent(tfMaxsal, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                                .addGap(107, 107, 107)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_search, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(lblFormtitle)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblFormtitle)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId)
                    .addComponent(tf_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfMinsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMinsal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxsal)
                    .addComponent(tfMaxsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btInsert)
                    .addComponent(btDelete))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbShowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbShowMouseClicked
        // TODO add your handling code here:
        tfId.setText(tbShow.getValueAt(tbShow.getSelectedRow(), 1).toString());
        tfTitle.setText(tbShow.getValueAt(tbShow.getSelectedRow(), 2).toString());
        tfMinsal.setText(tbShow.getValueAt(tbShow.getSelectedRow(), 3).toString());
        tfMaxsal.setText(tbShow.getValueAt(tbShow.getSelectedRow(), 4).toString());

        tfId.setEnabled(false);
    }//GEN-LAST:event_tbShowMouseClicked

    private void cbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchActionPerformed
        // TODO add your handling code here:
        String t_search = tf_search.getText();
        //        DefaultTableModel myTable = new DefaultTableModel();
        //        jTable1.setModel(myTable);
        //        myTable.addColumn("Job Id");
        //        myTable.addColumn("Job Title");
        //        myTable.addColumn("Minimal Salary");
        //        myTable.addColumn("Maximal Salary");
        if (t_search != "" && cbSearch.getSelectedItem() == "Search By Id") {
            //            for (Job job : jc.getById(t_search)) {
            //                myTable.addRow(new Object[]{
            //                    job.getId(),
            //                    job.getName(),
            //                    job.getMin_salary(),
            //                    job.getMax_salary()
            //                });
            //            }
            tableData(jc.getById(t_search));
        } else if (t_search != "" && cbSearch.getSelectedItem() == "Search") {
            //            for (Job job : jc.searchBy(t_search)) {
            //                myTable.addRow(new Object[]{
            //                    job.getId(),
            //                    job.getName(),
            //                    job.getMin_salary(),
            //                    job.getMax_salary()
            //                });
            //            }
            tableData(jc.searchBy(t_search));
        } else {
            tableData(jc.getAll());
        }
    }//GEN-LAST:event_cbSearchActionPerformed

    private void tfMinsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMinsalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMinsalActionPerformed

    private void tfMinsalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMinsalKeyTyped
        // TODO add your handling code here:
        filterhuruf(evt);
    }//GEN-LAST:event_tfMinsalKeyTyped

    private void tfMaxsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfMaxsalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfMaxsalActionPerformed

    private void tfMaxsalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMaxsalKeyTyped
        // TODO add your handling code here:
        filterhuruf(evt);
    }//GEN-LAST:event_tfMaxsalKeyTyped

    private void btInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsertActionPerformed
        // TODO add your handling code here:

        //        String id = tf_id.getText();
        //        String title = tf_title.getText();
        //        String minsal = tf_minsal.getText();
        //        String maxsal = tf_maxsal.getText();
        if (konfirmasi()) {
            if (isEmpty()) {
                JOptionPane.showMessageDialog(null, jc.insert(tfId.getText(), tfTitle.getText(), tfMinsal.getText(), tfMaxsal.getText()));
            } else {
                try {
                    int reply = JOptionPane.showConfirmDialog(null,
                            "Anda yakin akan melakukan perubahan data?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
                    );
                    if (reply == JOptionPane.YES_OPTION) {
                        JOptionPane.showMessageDialog(null, jc.update(tfId.getText(), tfTitle.getText(), tfMinsal.getText(), tfMaxsal.getText()));
                        clean();
                        tableData(jc.getAll());
                    }
                } catch (Exception e) {
                    e.printStackTrace();//dispose();
                }
            }
            clean();
            tableData(jc.getAll());
        }
    }//GEN-LAST:event_btInsertActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        // TODO add your handling code here:
        String id = tfId.getText();
        if (id.equals("")) {
            JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
        } else {
            try {
                int reply = JOptionPane.showConfirmDialog(null,
                        "Anda yakin akan menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
                );
                if (reply == JOptionPane.YES_OPTION) {
                    JOptionPane.showMessageDialog(null, jc.delete(id));
                    clean();
                }
            } catch (Exception e) {
                dispose();
            }
        }
        tableData(jc.getAll());
    }//GEN-LAST:event_btDeleteActionPerformed

    private void tfIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIdActionPerformed

    private void tfTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTitleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btInsert;
    private javax.swing.JComboBox<String> cbSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFormtitle;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblMaxsal;
    private javax.swing.JLabel lblMinsal;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tbShow;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfMaxsal;
    private javax.swing.JTextField tfMinsal;
    private javax.swing.JTextField tfTitle;
    private javax.swing.JTextField tf_search;
    // End of variables declaration//GEN-END:variables
}
