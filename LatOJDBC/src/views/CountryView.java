/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.CountryController;
import controllers.RegionController;
import daos.RegionDAO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
//import models.Country;
import javax.swing.table.DefaultTableModel;
import models.Country;
import models.Region;
import tools.DBConnection;

/**
 *
 * @author gerydanu
 */
public class CountryView extends javax.swing.JInternalFrame {

    DBConnection connection = new DBConnection();
    CountryController cc = new CountryController(connection.getConnection());
    RegionController rc = new RegionController(connection.getConnection());
    
    
    DefaultTableModel tableCountry;
    /**
     * Creates new form Country
     */
    public CountryView() {
        initComponents();
        tampilTabelCountries();
        tampilRegion();
    }
    
    void tampilRegion() {
        for (Region region : rc.getAllData()) {
            cbRegionId.addItem(region.getId()+" - "+region.getName());
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnAtas = new javax.swing.JPanel();
        lblJudul = new javax.swing.JLabel();
        pnKiri = new javax.swing.JPanel();
        lblCountryId = new javax.swing.JLabel();
        lblCountryName = new javax.swing.JLabel();
        lblRegionId = new javax.swing.JLabel();
        lblSearchDelete = new javax.swing.JLabel();
        pnKanan = new javax.swing.JPanel();
        tfCountryId = new javax.swing.JTextField();
        tfCountryName = new javax.swing.JTextField();
        cbRegionId = new javax.swing.JComboBox<>();
        btClear = new javax.swing.JButton();
        btSave = new javax.swing.JButton();
        tfSearch = new javax.swing.JTextField();
        chbCekById = new javax.swing.JCheckBox();
        btSearch = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        pnBawah = new javax.swing.JPanel();
        scpTabel = new javax.swing.JScrollPane();
        tbCountries = new javax.swing.JTable();

        setClosable(true);

        lblJudul.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblJudul.setText("COUNTRIES");
        pnAtas.add(lblJudul);

        lblCountryId.setText("COUNTRY_ID");

        lblCountryName.setText("COUNTRY_NAME");

        lblRegionId.setText("REGION_ID");

        lblSearchDelete.setText("Search / Delete");

        javax.swing.GroupLayout pnKiriLayout = new javax.swing.GroupLayout(pnKiri);
        pnKiri.setLayout(pnKiriLayout);
        pnKiriLayout.setHorizontalGroup(
            pnKiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnKiriLayout.createSequentialGroup()
                .addGroup(pnKiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCountryId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCountryName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRegionId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearchDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pnKiriLayout.setVerticalGroup(
            pnKiriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnKiriLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(lblCountryId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lblCountryName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lblRegionId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(lblSearchDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tfCountryId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCountryIdActionPerformed(evt);
            }
        });

        tfCountryName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCountryNameActionPerformed(evt);
            }
        });

        cbRegionId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {""}));
        cbRegionId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRegionIdActionPerformed(evt);
            }
        });

        btClear.setText("Clear");
        btClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClearActionPerformed(evt);
            }
        });

        btSave.setText("Save");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        chbCekById.setText("Get by ID");

        btSearch.setText("Search");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        btDelete.setText("Delete by ID");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnKananLayout = new javax.swing.GroupLayout(pnKanan);
        pnKanan.setLayout(pnKananLayout);
        pnKananLayout.setHorizontalGroup(
            pnKananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnKananLayout.createSequentialGroup()
                .addGroup(pnKananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnKananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tfCountryId, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfCountryName, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbRegionId, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnKananLayout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(chbCekById, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnKananLayout.createSequentialGroup()
                            .addComponent(btSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btClear))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnKananLayout.setVerticalGroup(
            pnKananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnKananLayout.createSequentialGroup()
                .addComponent(tfCountryId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(tfCountryName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(cbRegionId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnKananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSave, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btClear, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnKananLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chbCekById, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        scpTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scpTabelMouseClicked(evt);
            }
        });

        tbCountries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Country_ID", "Country_Name", "Region_ID"
            }
        ));
        tbCountries.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCountriesMouseClicked(evt);
            }
        });
        scpTabel.setViewportView(tbCountries);

        javax.swing.GroupLayout pnBawahLayout = new javax.swing.GroupLayout(pnBawah);
        pnBawah.setLayout(pnBawahLayout);
        pnBawahLayout.setHorizontalGroup(
            pnBawahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBawahLayout.createSequentialGroup()
                .addComponent(scpTabel, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnBawahLayout.setVerticalGroup(
            pnBawahLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBawahLayout.createSequentialGroup()
                .addComponent(scpTabel, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnAtas, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnKiri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnKanan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnBawah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnAtas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnKiri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnKanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(pnBawah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfCountryIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCountryIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCountryIdActionPerformed

    private void tfCountryNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCountryNameActionPerformed

    }//GEN-LAST:event_tfCountryNameActionPerformed

    private void cbRegionIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRegionIdActionPerformed
    }//GEN-LAST:event_cbRegionIdActionPerformed

    private boolean konfirmasi() {
        if (tfCountryId.getText().equals("") || 
                tfCountryName.getText().equals("") ||
                cbRegionId.getSelectedIndex()==0) {
            JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
            return false;
        }
        return true;
    }
    
    private boolean isEmpty() {
        if (cc.searchData(tfCountryId.getText(),true).isEmpty()) {
            return true;
        }
        return false;
    }
    
    private void showAllCountryTable(List<Country> countries){
        Object[] columnNames = {"No.", "Country ID", "Country Name", "Region ID"};
        Object[][] data = new Object[countries.size()][columnNames.length];
        for (int i = 0; i < data.length; i++) {
            data[i][0] = (i + 1);
            data[i][1] = countries.get(i).getCountry_id();
            data[i][2] = countries.get(i).getCountry_name();
            data[i][3] = countries.get(i).getRegion_id();
        }
        tableCountry = new DefaultTableModel(data, columnNames);
        tbCountries.setModel(tableCountry);
    }
    
    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        //JOptionPane.showMessageDialog(rootPane, cc.insert(jTextCountryId.getText(), jTextCountryName.getText(), jComboRegionId.getActionCommand()));
        if (konfirmasi()){
            if (isEmpty())JOptionPane.showMessageDialog(null, cc.insert(
                    tfCountryId.getText(), tfCountryName.getText(), 
                    cbRegionId.getSelectedItem().toString().split(" - ")[0]));
            else 
            {
                try {
                    int reply = JOptionPane.showConfirmDialog(null,
                            "Anda yakin akan melakukan perubahan data?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
                    );
                    if (reply == JOptionPane.YES_OPTION) {
                        JOptionPane.showMessageDialog(null, cc.update(tfCountryId.getText(), tfCountryName.getText(), cbRegionId.getSelectedItem().toString().split(" - ")[0]));
                        showAllCountryTable(cc.getAllData());
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            showAllCountryTable(cc.getAllData());
        }
    }//GEN-LAST:event_btSaveActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        if (tfSearch.equals("")) JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
        else 
        {
            try {
                int reply = JOptionPane.showConfirmDialog(null,
                        "Anda yakin akan menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
                );
                if (reply == JOptionPane.YES_OPTION) {
                    JOptionPane.showMessageDialog(null, cc.delete(tfSearch.getText()));
                    tfSearch.setText("");
                    showAllCountryTable(cc.getAllData());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        tampilTabelCountries();
    }//GEN-LAST:event_btDeleteActionPerformed

    private void scpTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scpTabelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_scpTabelMouseClicked

    private void tbCountriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCountriesMouseClicked
        tfCountryId.setText(tbCountries.getValueAt(tbCountries.getSelectedRow(), 1).toString());
        tfCountryName.setText(tbCountries.getValueAt(tbCountries.getSelectedRow(), 2).toString());
        for (int i = 0; i < cbRegionId.getItemCount(); i++) {
            if (cbRegionId.getItemAt(i).split(" - ")[0].equals(tbCountries.getValueAt(tbCountries.getSelectedRow(), 3).toString()))
                cbRegionId.setSelectedIndex(i);
        }

        tfCountryId.setEnabled(false);
    }//GEN-LAST:event_tbCountriesMouseClicked

    private void btClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClearActionPerformed
        tfCountryId.setEnabled(true);
        tfCountryId.setEditable(true);
        tfCountryId.setText("");
        tfCountryName.setText("");
        tfSearch.setText("");
        cbRegionId.setSelectedIndex(0);
    }//GEN-LAST:event_btClearActionPerformed

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        showAllCountryTable(cc.searchData(tfSearch.getText(), chbCekById.isSelected()));
    }//GEN-LAST:event_btSearchActionPerformed
    
    
    private void tampilTabelCountries() {
        DefaultTableModel tabelCountries = (DefaultTableModel) tbCountries.getModel();
        tabelCountries.setRowCount(0);
        int hitung = 1;
        for (models.Country values : cc.getAllData()) {
            Object[] data = {hitung, values.getCountry_id(), values.getCountry_name(), values.getRegion_id()};
            tabelCountries.addRow(data);
            hitung++;
        }

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btClear;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btSearch;
    private javax.swing.JComboBox<String> cbRegionId;
    private javax.swing.JCheckBox chbCekById;
    private javax.swing.JLabel lblCountryId;
    private javax.swing.JLabel lblCountryName;
    private javax.swing.JLabel lblJudul;
    private javax.swing.JLabel lblRegionId;
    private javax.swing.JLabel lblSearchDelete;
    private javax.swing.JPanel pnAtas;
    private javax.swing.JPanel pnBawah;
    private javax.swing.JPanel pnKanan;
    private javax.swing.JPanel pnKiri;
    private javax.swing.JScrollPane scpTabel;
    private javax.swing.JTable tbCountries;
    private javax.swing.JTextField tfCountryId;
    private javax.swing.JTextField tfCountryName;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
