/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.DepartmentController;
import controllers.EmployeeController;
import controllers.JobController;
import controllers.JobHistoryController;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Employee;
import tools.DBConnection;

/**
 *
 * @author FES
 */
public class EmployeeView extends javax.swing.JInternalFrame {

    DBConnection connection = new DBConnection();
    EmployeeController ec = new EmployeeController(connection.getConnection());
    JobHistoryController jhc = new JobHistoryController(connection.getConnection());
    JobController jc = new JobController(connection.getConnection());
    DepartmentController dc = new DepartmentController(connection.getConnection());
    List<Employee> employeeList = new ArrayList<>();
    List<models.Job> jobList = new ArrayList<>();
    List<models.Department> departmentList = new ArrayList<>();
    
    DefaultTableModel tableModel;
    /**
     * Creates new form NewJInternalFrame
     */
    public EmployeeView() {
        initComponents();
        showAllEmployeeTable(ec.getAllData());
        showAllEmployee(ec.getAllData());
        showAllJob(jc.getAll());
        showAllDepartment(dc.seachBy(""));
        setComboBox();
    }
    
    private boolean konfirmasi() {
        if (jTFEmployeeEmployeeId.getText().equals("") || 
                jTFEmployeeFirstName.getText().equals("") || 
                jTFEmployeeLastName.getText().equals("") || 
                jTFEmployeeEmail.getText().equals("") || 
                jTFEmployeePhoneNumber.getText().equals("") || 
                jTFEmployeeHireDate.getText().equals("") ||
                jCBEmployeeJobId.getSelectedIndex()==0 ||
                jCBEmployeeDepartmentId.getSelectedIndex()==0 ||
                jCBEmployeeManagerId.getSelectedIndex()==0 ||
                jTFEmployeeSalary.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
            return false;
        }
        return true;
    }
    
    private boolean isEmpty() {
        if (ec.searchData(jTFEmployeeEmployeeId.getText(),true).isEmpty()) {
            return true;
        }
        return false;
    }
    
    private void setComboBox(){
        for (models.Job data : jobList) jCBEmployeeJobId.addItem(data.getId()+" - "+data.getName());
        for (Employee data : employeeList) jCBEmployeeManagerId.addItem(data.getEmployeeId()+" - "+data.getFirst_name()+" "+data.getLast_name());
        for (models.Department data : departmentList) jCBEmployeeDepartmentId.addItem(data.getId()+" - "+data.getName());
    }
    
    private void showAllEmployeeTable(List<Employee> employees){
        Object[] columnNames = {"Nomor", "Employee ID", "First Name", "Last Name", "Email", "Phone Number", "Hire Date", "Job ID", "Salary", "Commission PCT", "Manager ID", "Department ID"};
        Object[][] data = new Object[employees.size()][columnNames.length];
        for (int i = 0; i < data.length; i++) {
            data[i][0] = (i + 1);
            data[i][1] = employees.get(i).getEmployeeId();
            data[i][2] = employees.get(i).getFirst_name();
            data[i][3] = employees.get(i).getLast_name();
            data[i][4] = employees.get(i).getEmail();
            data[i][5] = employees.get(i).getPhone_number();
            data[i][6] = employees.get(i).getHire_date();
            data[i][7] = employees.get(i).getJob_id();
            data[i][8] = employees.get(i).getSalary();
            data[i][9] = employees.get(i).getCommission_pct();
            data[i][10] = employees.get(i).getManager_id();
            data[i][11] = employees.get(i).getDepartment_id();
        }
        tableModel = new DefaultTableModel(data, columnNames);
        jTEmployee.setModel(tableModel);
    }
    
    private void showAllJob(List<models.Job> jobs){
        jobList = jobs;
    }
    
    private void showAllDepartment(List<models.Department> departments){
        departmentList = departments;
    }
    
    private void showAllEmployee (List<Employee> employees){
        employeeList.clear();
        employeeList = employees;
    }
    
    private void filterhuruf(KeyEvent a) {
        if (Character.isAlphabetic(a.getKeyChar())) {
            a.consume();
            JOptionPane.showMessageDialog(null, "Hanya Bisa Memasukan Karakter Angka");
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPEmployeeMain = new javax.swing.JPanel();
        jPEmployeeMainNorth = new javax.swing.JPanel();
        jLEmployeeTitle = new javax.swing.JLabel();
        jPEmployeeMainWest = new javax.swing.JPanel();
        jLEmployeeEmployeeId = new javax.swing.JLabel();
        jLEmployeeFirstName = new javax.swing.JLabel();
        jLEmployeeLastName = new javax.swing.JLabel();
        jLEmployeeEmail = new javax.swing.JLabel();
        jLEmployeePhoneNumber = new javax.swing.JLabel();
        jLEmployeeHireDate = new javax.swing.JLabel();
        jLEmployeeJobId = new javax.swing.JLabel();
        jLEmployeeSalary = new javax.swing.JLabel();
        jLEmployeeCommissionPct = new javax.swing.JLabel();
        jLEmployeeManagerId = new javax.swing.JLabel();
        jLEmployeeDepartmentId = new javax.swing.JLabel();
        jSEmployees1 = new javax.swing.JSeparator();
        jLEmployeeSearch = new javax.swing.JLabel();
        jPEmployeeMainCenter = new javax.swing.JPanel();
        jTFEmployeeEmployeeId = new javax.swing.JTextField();
        jTFEmployeeFirstName = new javax.swing.JTextField();
        jTFEmployeeLastName = new javax.swing.JTextField();
        jTFEmployeeEmail = new javax.swing.JTextField();
        jTFEmployeePhoneNumber = new javax.swing.JTextField();
        jTFEmployeeHireDate = new javax.swing.JTextField();
        jCBEmployeeJobId = new javax.swing.JComboBox<>();
        jTFEmployeeSalary = new javax.swing.JTextField();
        jTFEmployeeCommissionPct = new javax.swing.JTextField();
        jCBEmployeeManagerId = new javax.swing.JComboBox<>();
        jCBEmployeeDepartmentId = new javax.swing.JComboBox<>();
        jPEmployeeMainCenterContent1 = new javax.swing.JPanel();
        jBEmployeeInsert = new javax.swing.JButton();
        jBEmployeeClear = new javax.swing.JButton();
        jPEmployeeMainCenterContent2 = new javax.swing.JPanel();
        jTFEmployeeSearch = new javax.swing.JTextField();
        jPEmployeeMainCenterContent3 = new javax.swing.JPanel();
        jBEmployeeDelete = new javax.swing.JButton();
        jSEmployees2 = new javax.swing.JSeparator();
        jBEmployeeSearch = new javax.swing.JButton();
        jCBEmployeeisGetById = new javax.swing.JCheckBox();
        jSEmployees3 = new javax.swing.JSeparator();
        jPEmployeeMainSouth = new javax.swing.JPanel();
        jSPEmployee = new javax.swing.JScrollPane();
        jTEmployee = new javax.swing.JTable();

        setClosable(true);
        setVisible(true);

        jPEmployeeMain.setLayout(new java.awt.BorderLayout(1, 1));

        jLEmployeeTitle.setText("EMPLOYEES");
        jPEmployeeMainNorth.add(jLEmployeeTitle);

        jPEmployeeMain.add(jPEmployeeMainNorth, java.awt.BorderLayout.PAGE_START);

        jPEmployeeMainWest.setLayout(new java.awt.GridLayout(14, 1));

        jLEmployeeEmployeeId.setText("Employee ID");
        jPEmployeeMainWest.add(jLEmployeeEmployeeId);

        jLEmployeeFirstName.setText("First Name");
        jPEmployeeMainWest.add(jLEmployeeFirstName);

        jLEmployeeLastName.setText("Last Name");
        jPEmployeeMainWest.add(jLEmployeeLastName);

        jLEmployeeEmail.setText("Email");
        jPEmployeeMainWest.add(jLEmployeeEmail);

        jLEmployeePhoneNumber.setText("Phone Number");
        jPEmployeeMainWest.add(jLEmployeePhoneNumber);

        jLEmployeeHireDate.setText("Hire Date");
        jPEmployeeMainWest.add(jLEmployeeHireDate);

        jLEmployeeJobId.setText("Job Id");
        jPEmployeeMainWest.add(jLEmployeeJobId);

        jLEmployeeSalary.setText("Salary");
        jPEmployeeMainWest.add(jLEmployeeSalary);

        jLEmployeeCommissionPct.setText("Commission Pct");
        jPEmployeeMainWest.add(jLEmployeeCommissionPct);

        jLEmployeeManagerId.setText("Manager Id");
        jPEmployeeMainWest.add(jLEmployeeManagerId);

        jLEmployeeDepartmentId.setText("Department Id");
        jPEmployeeMainWest.add(jLEmployeeDepartmentId);
        jPEmployeeMainWest.add(jSEmployees1);

        jLEmployeeSearch.setText("Search/Delete");
        jPEmployeeMainWest.add(jLEmployeeSearch);

        jPEmployeeMain.add(jPEmployeeMainWest, java.awt.BorderLayout.LINE_START);

        jPEmployeeMainCenter.setLayout(new java.awt.GridLayout(14, 1));

        jTFEmployeeEmployeeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFEmployeeEmployeeIdActionPerformed(evt);
            }
        });
        jPEmployeeMainCenter.add(jTFEmployeeEmployeeId);
        jPEmployeeMainCenter.add(jTFEmployeeFirstName);
        jPEmployeeMainCenter.add(jTFEmployeeLastName);
        jPEmployeeMainCenter.add(jTFEmployeeEmail);
        jPEmployeeMainCenter.add(jTFEmployeePhoneNumber);
        jPEmployeeMainCenter.add(jTFEmployeeHireDate);

        jCBEmployeeJobId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jCBEmployeeJobId.setToolTipText("");
        jCBEmployeeJobId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBEmployeeJobIdActionPerformed(evt);
            }
        });
        jPEmployeeMainCenter.add(jCBEmployeeJobId);

        jTFEmployeeSalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFEmployeeSalaryKeyTyped(evt);
            }
        });
        jPEmployeeMainCenter.add(jTFEmployeeSalary);
        jPEmployeeMainCenter.add(jTFEmployeeCommissionPct);

        jCBEmployeeManagerId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jCBEmployeeManagerId.setToolTipText("");
        jCBEmployeeManagerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBEmployeeManagerIdActionPerformed(evt);
            }
        });
        jPEmployeeMainCenter.add(jCBEmployeeManagerId);

        jCBEmployeeDepartmentId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jCBEmployeeDepartmentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBEmployeeDepartmentIdActionPerformed(evt);
            }
        });
        jPEmployeeMainCenter.add(jCBEmployeeDepartmentId);

        jPEmployeeMainCenterContent1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jBEmployeeInsert.setText("Save");
        jBEmployeeInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEmployeeInsertActionPerformed(evt);
            }
        });
        jPEmployeeMainCenterContent1.add(jBEmployeeInsert);

        jBEmployeeClear.setText("Clear");
        jBEmployeeClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEmployeeClearActionPerformed(evt);
            }
        });
        jPEmployeeMainCenterContent1.add(jBEmployeeClear);

        jPEmployeeMainCenter.add(jPEmployeeMainCenterContent1);

        jPEmployeeMainCenterContent2.setLayout(new java.awt.GridLayout(1, 0));
        jPEmployeeMainCenterContent2.add(jTFEmployeeSearch);

        jPEmployeeMainCenter.add(jPEmployeeMainCenterContent2);

        jPEmployeeMainCenterContent3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jBEmployeeDelete.setText("Delete by ID");
        jBEmployeeDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEmployeeDeleteActionPerformed(evt);
            }
        });
        jPEmployeeMainCenterContent3.add(jBEmployeeDelete);
        jPEmployeeMainCenterContent3.add(jSEmployees2);

        jBEmployeeSearch.setText("Search");
        jBEmployeeSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEmployeeSearchActionPerformed(evt);
            }
        });
        jPEmployeeMainCenterContent3.add(jBEmployeeSearch);

        jCBEmployeeisGetById.setText("Get By ID");
        jCBEmployeeisGetById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBEmployeeisGetByIdActionPerformed(evt);
            }
        });
        jPEmployeeMainCenterContent3.add(jCBEmployeeisGetById);
        jPEmployeeMainCenterContent3.add(jSEmployees3);

        jPEmployeeMainCenter.add(jPEmployeeMainCenterContent3);

        jPEmployeeMain.add(jPEmployeeMainCenter, java.awt.BorderLayout.CENTER);

        jSPEmployee.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jSPEmployee.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTEmployeeMouseClicked(evt);
            }
        });
        jSPEmployee.setViewportView(jTEmployee);

        javax.swing.GroupLayout jPEmployeeMainSouthLayout = new javax.swing.GroupLayout(jPEmployeeMainSouth);
        jPEmployeeMainSouth.setLayout(jPEmployeeMainSouthLayout);
        jPEmployeeMainSouthLayout.setHorizontalGroup(
            jPEmployeeMainSouthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSPEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        jPEmployeeMainSouthLayout.setVerticalGroup(
            jPEmployeeMainSouthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSPEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPEmployeeMain.add(jPEmployeeMainSouth, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPEmployeeMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPEmployeeMain, javax.swing.GroupLayout.PREFERRED_SIZE, 670, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFEmployeeEmployeeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFEmployeeEmployeeIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFEmployeeEmployeeIdActionPerformed

    private void jBEmployeeInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEmployeeInsertActionPerformed
//        ec.insert(jTFEmployeeEmployeeId.getText(), jTFEmployeeFirstName.getText(), jTFEmployeeLastName.getText(), jTFEmployeeEmail.getText(), jTFEmployeePhoneNumber.getText(), jTFEmployeeHireDate.getText(), jTFEmployeeJobId.getText(), jTFEmployeeSalary.getText(), jTFEmployeeCommissionPct.getText(), jTFEmployeeManagerId.getText(), jTFEmployeeDepartmentId.getText());
        if (konfirmasi()){
            if (isEmpty())JOptionPane.showMessageDialog(null, ec.insert(
                    jTFEmployeeEmployeeId.getText(), jTFEmployeeFirstName.getText(), jTFEmployeeLastName.getText(), 
                    jTFEmployeeEmail.getText(), jTFEmployeePhoneNumber.getText(), jTFEmployeeHireDate.getText(), 
                    jCBEmployeeJobId.getSelectedItem().toString().split(" - ")[0], jTFEmployeeSalary.getText(), 
                    jTFEmployeeCommissionPct.getText(), 
                    jCBEmployeeManagerId.getSelectedItem().toString().split(" - ")[0], 
                    jCBEmployeeDepartmentId.getSelectedItem().toString().split(" - ")[0]));
            else 
            {
                try {
                    int reply = JOptionPane.showConfirmDialog(null,
                            "Anda yakin akan melakukan perubahan data?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
                    );
                    if (reply == JOptionPane.YES_OPTION) {
                        JOptionPane.showMessageDialog(null, ec.update(jTFEmployeeEmployeeId.getText(), jTFEmployeeFirstName.getText(), 
                                jTFEmployeeLastName.getText(), jTFEmployeeEmail.getText(), jTFEmployeePhoneNumber.getText(), 
                                jTFEmployeeHireDate.getText(), jCBEmployeeJobId.getSelectedItem().toString().split(" - ")[0], 
                                jTFEmployeeSalary.getText(), jTFEmployeeCommissionPct.getText(), 
                                jCBEmployeeManagerId.getSelectedItem().toString().split(" - ")[0], 
                                jCBEmployeeDepartmentId.getSelectedItem().toString().split(" - ")[0]));
                        showAllEmployeeTable(ec.getAllData());
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            showAllEmployeeTable(ec.getAllData());
        }
    }//GEN-LAST:event_jBEmployeeInsertActionPerformed

    private void jBEmployeeDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEmployeeDeleteActionPerformed
//        JOptionPane.showConfirmDialog(null, ec.delete(jTFEmployeeSearch.getText()));
        if (jTFEmployeeSearch.equals("")) JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
        else 
        {
            try {
                int reply = JOptionPane.showConfirmDialog(null,
                        "Anda yakin akan menghapus data?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
                );
                if (reply == JOptionPane.YES_OPTION) {
                    jhc.delete(jTFEmployeeSearch.getText());
                    JOptionPane.showMessageDialog(null, ec.delete(jTFEmployeeSearch.getText()));
                    jTFEmployeeSearch.setText("");
                    showAllEmployeeTable(ec.getAllData());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        showAllEmployeeTable(ec.getAllData());
    }//GEN-LAST:event_jBEmployeeDeleteActionPerformed

    private void jBEmployeeSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEmployeeSearchActionPerformed

        showAllEmployeeTable(ec.searchData(jTFEmployeeSearch.getText(), jCBEmployeeisGetById.isSelected()));
    }//GEN-LAST:event_jBEmployeeSearchActionPerformed

    private void jCBEmployeeisGetByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBEmployeeisGetByIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBEmployeeisGetByIdActionPerformed

    private void jCBEmployeeJobIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBEmployeeJobIdActionPerformed
        
    }//GEN-LAST:event_jCBEmployeeJobIdActionPerformed

    private void jTEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTEmployeeMouseClicked
        jTFEmployeeEmployeeId.setText(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 1).toString());
        jTFEmployeeEmployeeId.setEditable(false);
        jTFEmployeeFirstName.setText(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 2).toString());
        jTFEmployeeLastName.setText(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 3).toString());
        jTFEmployeeEmail.setText(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 4).toString());
        jTFEmployeePhoneNumber.setText(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 5).toString());
        jTFEmployeeHireDate.setText(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 6).toString());
        for (int i = 0; i < jCBEmployeeJobId.getItemCount(); i++) {
            if (jCBEmployeeJobId.getItemAt(i).split(" - ")[0].equals(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 7).toString()))
                jCBEmployeeJobId.setSelectedIndex(i);
        }
        jTFEmployeeSalary.setText(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 8).toString());
        jTFEmployeeCommissionPct.setText(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 9).toString());
        for (int i = 0; i < jCBEmployeeManagerId.getItemCount(); i++) {
            if (jCBEmployeeManagerId.getItemAt(i).split(" - ")[0].equals(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 10).toString()))
                jCBEmployeeManagerId.setSelectedIndex(i);
        }
        for (int i = 0; i < jCBEmployeeDepartmentId.getItemCount(); i++) {
            if (jCBEmployeeDepartmentId.getItemAt(i).split(" - ")[0].equals(jTEmployee.getValueAt(jTEmployee.getSelectedRow(), 11).toString()))
                jCBEmployeeDepartmentId.setSelectedIndex(i);
        }
    }//GEN-LAST:event_jTEmployeeMouseClicked

    private void jBEmployeeClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEmployeeClearActionPerformed
        jTFEmployeeEmployeeId.setEditable(true);
        jTFEmployeeEmployeeId.setText("");
        jTFEmployeeFirstName.setText("");
        jTFEmployeeLastName.setText("");
        jTFEmployeeEmail.setText("");
        jTFEmployeePhoneNumber.setText("");
        jTFEmployeeHireDate.setText("");
        jCBEmployeeJobId.setSelectedIndex(0);
        jTFEmployeeSalary.setText("");
        jTFEmployeeCommissionPct.setText("");
        jCBEmployeeManagerId.setSelectedIndex(0);
        jCBEmployeeDepartmentId.setSelectedIndex(0);
    }//GEN-LAST:event_jBEmployeeClearActionPerformed

    private void jTFEmployeeSalaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFEmployeeSalaryKeyTyped
        filterhuruf(evt);
    }//GEN-LAST:event_jTFEmployeeSalaryKeyTyped

    private void jCBEmployeeManagerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBEmployeeManagerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBEmployeeManagerIdActionPerformed

    private void jCBEmployeeDepartmentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBEmployeeDepartmentIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBEmployeeDepartmentIdActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBEmployeeClear;
    private javax.swing.JButton jBEmployeeDelete;
    private javax.swing.JButton jBEmployeeInsert;
    private javax.swing.JButton jBEmployeeSearch;
    private javax.swing.JComboBox<String> jCBEmployeeDepartmentId;
    private javax.swing.JComboBox<String> jCBEmployeeJobId;
    private javax.swing.JComboBox<String> jCBEmployeeManagerId;
    private javax.swing.JCheckBox jCBEmployeeisGetById;
    private javax.swing.JLabel jLEmployeeCommissionPct;
    private javax.swing.JLabel jLEmployeeDepartmentId;
    private javax.swing.JLabel jLEmployeeEmail;
    private javax.swing.JLabel jLEmployeeEmployeeId;
    private javax.swing.JLabel jLEmployeeFirstName;
    private javax.swing.JLabel jLEmployeeHireDate;
    private javax.swing.JLabel jLEmployeeJobId;
    private javax.swing.JLabel jLEmployeeLastName;
    private javax.swing.JLabel jLEmployeeManagerId;
    private javax.swing.JLabel jLEmployeePhoneNumber;
    private javax.swing.JLabel jLEmployeeSalary;
    private javax.swing.JLabel jLEmployeeSearch;
    private javax.swing.JLabel jLEmployeeTitle;
    private javax.swing.JPanel jPEmployeeMain;
    private javax.swing.JPanel jPEmployeeMainCenter;
    private javax.swing.JPanel jPEmployeeMainCenterContent1;
    private javax.swing.JPanel jPEmployeeMainCenterContent2;
    private javax.swing.JPanel jPEmployeeMainCenterContent3;
    private javax.swing.JPanel jPEmployeeMainNorth;
    private javax.swing.JPanel jPEmployeeMainSouth;
    private javax.swing.JPanel jPEmployeeMainWest;
    private javax.swing.JSeparator jSEmployees1;
    private javax.swing.JSeparator jSEmployees2;
    private javax.swing.JSeparator jSEmployees3;
    private javax.swing.JScrollPane jSPEmployee;
    private javax.swing.JTable jTEmployee;
    private javax.swing.JTextField jTFEmployeeCommissionPct;
    private javax.swing.JTextField jTFEmployeeEmail;
    private javax.swing.JTextField jTFEmployeeEmployeeId;
    private javax.swing.JTextField jTFEmployeeFirstName;
    private javax.swing.JTextField jTFEmployeeHireDate;
    private javax.swing.JTextField jTFEmployeeLastName;
    private javax.swing.JTextField jTFEmployeePhoneNumber;
    private javax.swing.JTextField jTFEmployeeSalary;
    private javax.swing.JTextField jTFEmployeeSearch;
    // End of variables declaration//GEN-END:variables
}
